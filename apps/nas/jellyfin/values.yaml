envFrom:
  envs:
    type: configMap
    useFromChart: false
    name: jellyfin-env
image:
  tag: "10.9.11" # {"$imagepolicy": "flux-system:jellyfin:tag"}
podAnnotations:
  backup.velero.io/backup-volumes: data
runtimeClassName: nvidia
# hostNetwork: true

global:
  labels:
    backupWeekly: "true"
    backupDaily: "true"
    app.kubernetes.io/part-of: jellyfin
service:
  main:
    labels:
      mirror.linkerd.io/exported: "true"
persistence:
  data:
    enabled: true
    mount:
    - path: /config
      subPath: config
    - path: /cache
      subPath: cache
    spec:
      isPersistentVolumeClaim: true
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "60Gi"
  movies:
    enabled: true
    mount:
    - path: /data/Movies
    spec:
      hostPath:
        path: ${jellyfin_movies_host_path}
        type: Directory
  tv:
    enabled: true
    mount:
    - path: /data/Series
    spec:
      hostPath:
        path: ${jellyfin_tv_host_path}
        type: Directory
  transcode:
    enabled: true
    mount:
    - path: /transcode
    spec:
      emptyDir:
        sizeLimit: 20Gi
        medium: Memory
ingress:
  main:
    enabled: true
    className: nginx
    labels:
      velero.io/exclude-from-backup: "true"
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "20m"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      # nginx.ingress.kubernetes.io/proxy-body-size: 25m
      cert-manager.io/cluster-issuer: letsencrypt-production
    hosts:
    - host: jellyfin.wahoo.li
      paths:
      - path: "/"
        pathType: "Prefix"
    - host: jellyfin.absolutist.it
      paths:
      - path: "/"
        pathType: "Prefix"
    tls:
    - secretName: tls-jellyfin-ingress
      hosts:
      - jellyfin.wahoo.li
      - jellyfin.absolutist.it
