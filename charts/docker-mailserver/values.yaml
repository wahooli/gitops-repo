# Default values for docker-mailserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
workloadType: Deployment
strategy:
  type: Recreate

# hostname: mailserver
# subdomain: localdomain
dnsPolicy: "ClusterFirstWithHostNet"
env:
  UPDATE_CHECK_INTERVAL: 1d
  SPAMASSASSIN_SPAM_TO_INBOX: "1"
  MOVE_SPAM_TO_JUNK: "1"
  ENABLE_FAIL2BAN: "0"
  ENABLE_CLAMAV: "0"
  ENABLE_AMAVIS: "0"
  ENABLE_FETCHMAIL: "0"
  ENABLE_GETMAIL: "0"
  LOGROTATE_INTERVAL: "weekly"
  MARK_SPAM_AS_READ: "0"
  POSTFIX_REJECT_UNKNOWN_CLIENT_HOSTNAME: "0"
  PERMIT_DOCKER: "none"

image:
  repository: ghcr.io/docker-mailserver/docker-mailserver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - name: smtp
    port: 25
    protocol: TCP
  - name: submissions
    port: 465
    protocol: TCP
  - name: submission
    port: 587
    protocol: TCP

probe:
  liveness:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10
    exec:
      command:
        - /bin/bash
        - -c
        - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|opendkim|opendmarc|postfix|rsyslog" | grep RUNNING
  readiness:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 10
    exec:
      command:
        - /bin/bash
        - -c
        - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
  startup:
    enabled: false
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 30
    exec:
      command:
        - /bin/bash
        - -c
        - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING

# could be for rspamd, but not tested
ingress:
  main:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
