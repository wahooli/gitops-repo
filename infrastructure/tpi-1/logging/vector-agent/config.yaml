data_dir: /vector-data-dir
api:
  enabled: false
  address: 0.0.0.0:8686
  playground: true
sources:
  k8s:
    type: kubernetes_logs
  internal_metrics:
    type: internal_metrics
transforms:
  parser:
    type: remap
    inputs: [k8s]
    source: |
      .clustername = "tpi-1"
      .log = parse_json(.message) ?? .message
      del(.message)
      # try parsing timestamp out from logline
      if exists(.log.ts) {
        .timestamp = .log.ts
      }
      if exists(.kubernetes.pod_labels."app.kubernetes.io/name") && contains(string!(.kubernetes.pod_labels."app.kubernetes.io/name"), "authentik") {
        .log.msg = .log.event
      }
      if exists(.kubernetes.pod_labels."checksum/configMaps") {
        del(.kubernetes.pod_labels."checksum/configMaps")
      }
      if exists(.pod_labels."controller-revision-hash") {
        del(.pod_labels."controller-revision-hash")
      }
      if exists(.pod_labels."pod-template-hash") {
        del(.pod_labels."pod-template-hash")
      }
      del(.kubernetes.pod_uid)
      del(.kubernetes.pod_ips)
      del(.kubernetes.node_labels)
      del(.kubernetes.container_image_id)
      del(.kubernetes.namespace_labels)
  backslash_multiline:
    type: reduce
    inputs: [k8s]
    group_by: [file, stream]
    merge_strategies:
      message: concat_newline
    ends_when: |
      matched, err = match(.message, r'[^\\]$');
      if err != null {
        false;
      } else {
        matched;
      }
sinks:
  exporter:
    type: prometheus_exporter
    address: 0.0.0.0:9090
    inputs: [internal_metrics]
  vlogs:
    type: vector
    inputs: [parser]
    address: http://vector-global-write.logging.svc.cluster.local.:6000
    compression: true
    healthcheck:
      enabled: true
