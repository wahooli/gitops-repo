controller:
  dnsConfig:
    options:
    - name: ndots
      value: "3"
  extraArgs:
    default-backend-service: infrastructure/default-backend
  replicaCount: 1
  allowSnippetAnnotations: true  # authentik forward auth
  terminationGracePeriodSeconds: 15
  config:
    use-forwarded-headers: "true"
    # forwarded-for-header: "CF-Connecting-IP"
    enable-real-ip: "true"
    enable-http2: "true"
    http-snippet: |
      map $upstream_response_time $default_upstream_response_time {
        ~^(?<first_value>[\d\.]+) $first_value;
        default 0;
      }
      map $upstream_connect_time $default_upstream_connect_time {
        ~^(?<first_value>[\d\.]+) $first_value;
        default 0;
      }
      map "$time_iso8601 # $msec" $time_iso8601_ms { "~(^[^+]+)(\+[0-9:]+) # \d+\.(\d+)$" $1.$3$2; }
      map $upstream_header_time $default_upstream_header_time {
        ~^(?<first_value>[\d\.]+) $first_value;
        default 0;
      }
      map $http_x_proxy_name $proxy_name {
        default $http_x_proxy_name;
        "" "unknown";
      }
      map $status $loglevel {
        default "notice";
        "~^5\d\d" "crit";
        "~^2\d\d" "info";
        "~^3\d\d" "debug";
        "~^1\d\d" "info";
        "~^4\d\d" "warn";
      }
    enable-gzip: "true"
    enable-brotli: "true"
    proxy-real-ip-cidr: "${cluster_native_cidr},${cloud_lb_cidr}"
    log-format-escape-json: "true"
    use-proxy-protocol: "true"
    log-format-upstream: '{"timestamp": "$time_iso8601_ms", "level": "$loglevel", "proxy_name": "$proxy_name", "remote_addr": "$remote_addr", "message": "$host $request $status - $remote_user - [client: $remote_addr]", "x_forwarded_for": "$http_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "request_time": $request_time, "upstream_response_time": $default_upstream_response_time, "upstream_connect_time": $default_upstream_connect_time, "upstream_header_time": $default_upstream_header_time, "method": "$request_method", "http_referrer": "$http_referer", "user_agent": "$http_user_agent"}'
  metrics:
    enabled: true
  service:
    externalTrafficPolicy: Local
    # loadBalancerClass: io.cilium/bgp-control-plane
    # loadBalancerClass: kube-vip.io/kube-vip-class
    type: LoadBalancer
    annotations:
      external-dns.alpha.kubernetes.io/hostname: nginx.tpi-1.absolutist.it,nginx.tpi-1.wahoo.li
      lbipam.cilium.io/ips: ${nginx_lb_ip}
